image: node:16-alpine

stages:
  - build
  - deploy

cache:
  key: npm
  policy: pull-push
  paths:
    - .npm

variables:
  RULES_CHANGES_PATH: '**/*'

.base-rules:
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(main|dev)$/
      when: always
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - $RULES_CHANGES_PATH
    - when: manual
      allow_failure: true
  tags:
    - m-to-b

.server:
  extends: .base-rules
  variables:
    RULES_CHANGES_PATH: 'server/**/*'

.client:
  extends: .base-rules
  variables:
    RULES_CHANGES_PATH: 'client/**/*'

server:
  stage: build
  extends: .server
  needs: []
  script:
    - cd server
    - npm ci --cache ../.npm --prefer-offline
    - npm run lint:style -- --max-warnings=0
    - npm run build

client:
  stage: build
  extends: .client
  needs: []
  script:
    - cd client
    - npm ci --cache ../.npm --prefer-offline
    - npm run lint:style -- --max-warnings=0
    - npm run build

deploy:
  stage: deploy
  only:
    - main
  tags:
    - m-to-b
  needs: ['server', 'client']
  script:
    - apk update && apk add openssh-client rsync
    - chmod 600 $SSH_PRIVKEY
    - mv $ENV_FILE .env
    - ssh -p $SSH_PORT -i $SSH_PRIVKEY -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST
      '/bin/bash -c "shopt -s dotglob && mkdir -p ~/.deploy/schuelertreff && rm -rf ~/.deploy/schuelertreff/*"'
    - rsync -avz -e "ssh -p $SSH_PORT -i $SSH_PRIVKEY -o StrictHostKeyChecking=no" --exclude=.npm --exclude=.git
      . $SSH_USER@$SSH_HOST:.deploy/schuelertreff
    - ssh -p $SSH_PORT -i $SSH_PRIVKEY -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST
      'cd ~/.deploy/schuelertreff && docker compose up -d --build'
